{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Welcome \u00b6 This package was inspired by MATLAB's msalign function which allows alignment of multiple signals to reference peaks. Quick installation \u00b6 pip install msalign Quick usage \u00b6 import numpy as np from msalign import msalign fname = r \"./example_data/msalign_test_data.csv\" data = np . genfromtxt ( fname , delimiter = \",\" ) xvals = data [ 1 :, 0 ] zvals = data [ 1 :, 1 :] . T peaks = [ 3991.4 , 4598 , 7964 , 9160 ] kwargs = dict ( weights = [ 60 , 100 , 60 , 100 ], only_shift = False , ) zvals_new = msalign ( xvals , zvals , peaks , ** kwargs ) Example alignment \u00b6 In the Usage section you will find a couple of examples of signal alignment based on single or multiple reference peaks.","title":"Home"},{"location":"index.html#welcome","text":"This package was inspired by MATLAB's msalign function which allows alignment of multiple signals to reference peaks.","title":"Welcome"},{"location":"index.html#quick-installation","text":"pip install msalign","title":"Quick installation"},{"location":"index.html#quick-usage","text":"import numpy as np from msalign import msalign fname = r \"./example_data/msalign_test_data.csv\" data = np . genfromtxt ( fname , delimiter = \",\" ) xvals = data [ 1 :, 0 ] zvals = data [ 1 :, 1 :] . T peaks = [ 3991.4 , 4598 , 7964 , 9160 ] kwargs = dict ( weights = [ 60 , 100 , 60 , 100 ], only_shift = False , ) zvals_new = msalign ( xvals , zvals , peaks , ** kwargs )","title":"Quick usage"},{"location":"index.html#example-alignment","text":"In the Usage section you will find a couple of examples of signal alignment based on single or multiple reference peaks.","title":"Example alignment"},{"location":"main/about.html","text":"About \u00b6 Maintainer \u00b6 Lukasz G. Migas | Website | GitHub Getting in touch \u00b6 If you have any questions, encounter problems or would like to chat, please contact Lukasz Migas ( l.g.migas@tudelft.nl ) or lukas.migas@yahoo.com or @munieq11 ).","title":"About"},{"location":"main/about.html#about","text":"","title":"About"},{"location":"main/about.html#maintainer","text":"Lukasz G. Migas | Website | GitHub","title":"Maintainer"},{"location":"main/about.html#getting-in-touch","text":"If you have any questions, encounter problems or would like to chat, please contact Lukasz Migas ( l.g.migas@tudelft.nl ) or lukas.migas@yahoo.com or @munieq11 ).","title":"Getting in touch"},{"location":"main/changelog.html","text":"Changelog \u00b6 Version 0.1.0 \u00b6 Fixed: #5 small bug that prevented correct alignment of the MS example New: added new keyword parameter 'return_shifts' which when set to True will return the aligned data and the vector containing shift parameters","title":"Changelog"},{"location":"main/changelog.html#changelog","text":"","title":"Changelog"},{"location":"main/changelog.html#version-010","text":"Fixed: #5 small bug that prevented correct alignment of the MS example New: added new keyword parameter 'return_shifts' which when set to True will return the aligned data and the vector containing shift parameters","title":"Version 0.1.0"},{"location":"main/installation.html","text":"Installation \u00b6 There are a couple of ways you can install msalign . The easiest one is probably using pip. If you installing for the first time, simply type in the following command: pip install msalign If you upgrading, use this one: pip install -- upgrade msalign or if you would like the most up-to-date version, use: or pip install git + https : // github . com / lukasz - migas / msalign . git","title":"Installation"},{"location":"main/installation.html#installation","text":"There are a couple of ways you can install msalign . The easiest one is probably using pip. If you installing for the first time, simply type in the following command: pip install msalign If you upgrading, use this one: pip install -- upgrade msalign or if you would like the most up-to-date version, use: or pip install git + https : // github . com / lukasz - migas / msalign . git","title":"Installation"},{"location":"main/reference.html","text":"Reference \u00b6 The function is based on a method described in Chapter 4 of the book 'Systems Bioinformatics: An Engineering Case-Based Approach' on page 112. Monchamp, P., Andrade-Cetto, L., Zhang, J.Y., and Henson, R. (2007) Signal Processing Methods for Mass Spectrometry. In Systems Bioinformatics: An Engineering Case-Based Approach, G. Alterovitz and M.F. Ramoni, eds. Artech House Publishers). MATLAB's msalign","title":"Reference"},{"location":"main/reference.html#reference","text":"The function is based on a method described in Chapter 4 of the book 'Systems Bioinformatics: An Engineering Case-Based Approach' on page 112. Monchamp, P., Andrade-Cetto, L., Zhang, J.Y., and Henson, R. (2007) Signal Processing Methods for Mass Spectrometry. In Systems Bioinformatics: An Engineering Case-Based Approach, G. Alterovitz and M.F. Ramoni, eds. Artech House Publishers). MATLAB's msalign","title":"Reference"},{"location":"main/usage.html","text":"Usage \u00b6 Usage is relatively straightforward. Simply import the function msalign from the package and provide xvals , zvals and peaks . Other parameters can be passed-in using kwargs . Synthetic example \u00b6 You can quite simply generate synthetic example. Below, I am generating a Gaussian signal (with tiny amount of noise) which is aligned based on a single peak. In this example, the first signal in the 2D array ( synthetic_signal ) is the correct signal to which we want to align and everything else is 'shifted' by an arbirtary amount ( shifts ). import numpy as np from scipy import signal from scipy.ndimage import shift import matplotlib.pyplot as plt from msalign import msalign # generate synthetic dataset n_points = 100 n_signals = 5 noise = 1e-3 shifts = np . arange ( 1 , n_signals ) xvals = np . arange ( n_points ) # the first signal is 'real' and we should align to that synthetic_signal = np . zeros (( n_signals , n_points )) synthetic_signal [ 0 ] = signal . gaussian ( n_points , std = 4 ) + np . random . normal ( 0 , noise , n_points ) # determine the major peak by which msalign should align alignment_peak = synthetic_signal [ 0 ] . argmax () # apply shift pattern for i in range ( 1 , n_signals ): synthetic_signal [ i ] = shift ( signal . gaussian ( n_points , std = 4 ), shifts [ i - 1 ]) + np . random . normal ( 0 , noise , n_points ) # plot signals that have not yet been aligned plt . figure () for i in range ( synthetic_signal . shape [ 0 ]): plt . plot ( xvals , synthetic_signal [ i ]) plt . show () # align using msalign synthetic_signal_shifted = msalign ( xvals , synthetic_signal , [ alignment_peak ]) # plot signals that have been aligned plt . figure () for i in range ( synthetic_signal_shifted . shape [ 0 ]): plt . plot ( xvals , synthetic_signal_shifted [ i ]) plt . show () Note As you can see, the signals that were shifted have values that go to 0 intensity. Rather than extrapolating, values that are returned as nan by the interpolator are replaced with 0s. Noisy synthetic example \u00b6 If your data is a bit more noisy (as most real dataset would be), you can also easily align it using msalign . In this example I simply change the value of noise from 1e-3 to 1e-1 . Mass Spectrometry example \u00b6 You can try-out the example that is used in MATLAB documentation. Simply download it from the msalign GitHub page import numpy as np from msalign import msalign fname = r \"./example_data/msalign_test_data.csv\" data = np . genfromtxt ( fname , delimiter = \",\" ) xvals = data [ 1 :, 0 ] zvals = data [ 1 :, 1 :] . T peaks = [ 3991.4 , 4598 , 7964 , 9160 ] kwargs = dict ( iterations = 5 , weights = [ 60 , 100 , 60 , 100 ], resolution = 100 , grid_steps = 20 , ratio = 2.5 , shift_range = [ - 100 , 100 ], only_shift = False , ) zvals_new = msalign ( xvals , zvals , peaks , ** kwargs )","title":"Usage"},{"location":"main/usage.html#usage","text":"Usage is relatively straightforward. Simply import the function msalign from the package and provide xvals , zvals and peaks . Other parameters can be passed-in using kwargs .","title":"Usage"},{"location":"main/usage.html#synthetic-example","text":"You can quite simply generate synthetic example. Below, I am generating a Gaussian signal (with tiny amount of noise) which is aligned based on a single peak. In this example, the first signal in the 2D array ( synthetic_signal ) is the correct signal to which we want to align and everything else is 'shifted' by an arbirtary amount ( shifts ). import numpy as np from scipy import signal from scipy.ndimage import shift import matplotlib.pyplot as plt from msalign import msalign # generate synthetic dataset n_points = 100 n_signals = 5 noise = 1e-3 shifts = np . arange ( 1 , n_signals ) xvals = np . arange ( n_points ) # the first signal is 'real' and we should align to that synthetic_signal = np . zeros (( n_signals , n_points )) synthetic_signal [ 0 ] = signal . gaussian ( n_points , std = 4 ) + np . random . normal ( 0 , noise , n_points ) # determine the major peak by which msalign should align alignment_peak = synthetic_signal [ 0 ] . argmax () # apply shift pattern for i in range ( 1 , n_signals ): synthetic_signal [ i ] = shift ( signal . gaussian ( n_points , std = 4 ), shifts [ i - 1 ]) + np . random . normal ( 0 , noise , n_points ) # plot signals that have not yet been aligned plt . figure () for i in range ( synthetic_signal . shape [ 0 ]): plt . plot ( xvals , synthetic_signal [ i ]) plt . show () # align using msalign synthetic_signal_shifted = msalign ( xvals , synthetic_signal , [ alignment_peak ]) # plot signals that have been aligned plt . figure () for i in range ( synthetic_signal_shifted . shape [ 0 ]): plt . plot ( xvals , synthetic_signal_shifted [ i ]) plt . show () Note As you can see, the signals that were shifted have values that go to 0 intensity. Rather than extrapolating, values that are returned as nan by the interpolator are replaced with 0s.","title":"Synthetic example"},{"location":"main/usage.html#noisy-synthetic-example","text":"If your data is a bit more noisy (as most real dataset would be), you can also easily align it using msalign . In this example I simply change the value of noise from 1e-3 to 1e-1 .","title":"Noisy synthetic example"},{"location":"main/usage.html#mass-spectrometry-example","text":"You can try-out the example that is used in MATLAB documentation. Simply download it from the msalign GitHub page import numpy as np from msalign import msalign fname = r \"./example_data/msalign_test_data.csv\" data = np . genfromtxt ( fname , delimiter = \",\" ) xvals = data [ 1 :, 0 ] zvals = data [ 1 :, 1 :] . T peaks = [ 3991.4 , 4598 , 7964 , 9160 ] kwargs = dict ( iterations = 5 , weights = [ 60 , 100 , 60 , 100 ], resolution = 100 , grid_steps = 20 , ratio = 2.5 , shift_range = [ - 100 , 100 ], only_shift = False , ) zvals_new = msalign ( xvals , zvals , peaks , ** kwargs )","title":"Mass Spectrometry example"}]}